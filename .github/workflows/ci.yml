name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Set SSH_AUTH_SOCK
      run: echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker images
      run: |
        docker compose -f deploy/docker/docker-compose.yaml build
        docker compose -f deploy/docker/docker-compose.yaml up -d

    - name: Shutdown Docker Compose
      run: docker compose -f deploy/docker/docker-compose.yaml down
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Execute deployment script via SSH
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        SSH_IP: ${{ secrets.SSH_IP }}
        CI_COMMIT_BRANCH: ${{ github.ref_name }}
        WORKDIR: test
      run: |
        apt-get update && apt-get install -y sshpass
        sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no root@$SSH_IP << EOF
          cd $WORKDIR
          git pull
          git checkout $CI_COMMIT_BRANCH
          git pull origin $CI_COMMIT_BRANCH
          docker compose down
          docker compose up -d
        EOF

